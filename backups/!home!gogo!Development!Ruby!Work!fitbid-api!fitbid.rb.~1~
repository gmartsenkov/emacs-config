require "rack/static"
require "rack/jwt"
require "sinatra"
require "sinatra/logger"
require "sinatra/namespace"
require "oj"

require_relative "./api/opportunities"
require_relative "./api/header"
require_relative "./api/helpers/authentication"

module Fitbid
  VERSION = File.read("VERSION").freeze

  class Root < Sinatra::Base
    configure :development, :production do
      logger filename: "log/fitbid.#{settings.environment}.log", level: :trace
    end

    configure :production do
      require "skylight/sinatra"
      Skylight.start!(file: File.join(__dir__, "config", "skylight.yml"))
    end

    configure do
      use Rack::JWT::Auth, {
        secret: ENV.fetch("JWT_SECRET_KEY"),
        verify: false,
        options: { algorithm: "HS256" },
        exclude: ["/fitbid/api/ping"]
      }
    end

    helpers Fitbid::Api::Helpers::Authentication

    register Sinatra::Namespace

    namespace "/fitbid/api" do
      get "/ping" do
        "pong"
      end

      register Fitbid::Api::Opportunities
      register Fitbid::Api::Header
    end
  end
end
